#include <dht11.h>
#include<LiquidCrystal.h>
#include <SoftwareSerial.h>
#include <string.h>
SoftwareSerial WiFi_Serial(3,4);
#define SSID "******"
#define PASS "**********"
#define DST_IP "aws.axelta.com" //cloud service
LiquidCrystal lcd(8,9,10,11,12,13);
int R=5;		// REED SWITCH 
int P=6;		// POWER
int X=7;		// PIR
int T=A2; 		// TEMPERATURE - A2 has already been defined as Analog Pin 2 in 
int H=A5;		//HUMIDITY
int L=A4;		//LIGHT
int CNT = 3;
float CELSIUS, HUM, LIGHT;
dht11 DHT11;
String RES_input;
String WiFi_input="";
int i=1;
int Start_chck=0;
void setup()
{
      Serial.begin(115200);
      lcd.begin(16,2);
      WiFi_Serial.begin(115200);
      WiFi_Serial.println("AT+UART_DEF=9600,8,1,0,0");
      delay(2000);
      WiFi_Serial.begin(9600);
      WiFi_Serial.println("ATE0");
      delay(200);
      WiFi_Serial.println("AT+CWQAP");
      delay(500);
      pinMode(P, INPUT);
      pinMode(R, INPUT);
      pinMode(X, INPUT); 

}

void WIFI_Check()
{
      WiFi_Serial.println("AT");
      delay(500);
      if(WiFi_Serial.available())
      {
      if(WiFi_Serial.find("OK"))
      {
      Serial.println("WIFI PLUGGED ON TO THE BOARD..!");
      Serial.println();
      Serial.println();
      WiFi_Serial.println("AT+CWMODE=1");
      delay(500);
      Start_chck=1;
      i=1;
      }
      }
      else
      {
      Serial.println("WIFI NOT PLUGGED..!");
      Serial.println();
      Serial.println("PLUG IN YOUR WIFI CHIP");  
      Serial.println();
      Serial.println();
      }
}
void connectWiFi()
      {
      WiFi_Serial.println("AT+CWJAP?");
      delay(5000);
      if(WiFi_Serial.available())
      {
      if(WiFi_Serial.find("No AP"))
      {
      Serial.println("NOT CONNECTED TO WIFI NETWORK");
      Serial.println();
      Serial.println();
      Serial.println("Trying to Connect to WiFi Network");
      String cmd = "AT+CWJAP=\"";
      cmd += SSID;
      cmd += "\",\"";
      cmd += PASS;
      cmd += "\"";
      WiFi_Serial.println(cmd);
      Serial.println(cmd);
      delay(5000);
      if(WiFi_Serial.available())
      {
      String RES_input="";
      while(WiFi_Serial.available()) // read the data into a variable as long as the 
      {
      RES_input+= (char)WiFi_Serial.read();
      }
      Serial.println(RES_input);
      if(WiFi_Serial.find("WIFI CONNECTED"))
      {
      Serial.println("CONNECTED TO WIFI NETWORK..!");
      }
      }
      }
      else
      {
      lcd.clear();
      lcd.print("CONNECTED TO");
      lcd.setCursor(0,1);
      lcd.print("WIFI NETWORK..!!");  
      Serial.println("CONNECTED TO WIFI NETWORK..!");
      Serial.println();
      Serial.println();
      post();
      i=0;
      }
      }
}
//////////***TEMPERATURE***///////////     
void TEMPERATURE()
    {
      Serial.print("Geeting Temp\t");    
      lcd.clear();
      int value_temp=analogRead(T);
      float millivolts_temp=(value_temp/1023.0)*5000;
      CELSIUS=millivolts_temp/10;
      lcd.setCursor(0,0);
      lcd.print("T:");
      lcd.print(CELSIUS);
      Serial.print("T:\t");
      Serial.print(CELSIUS); Serial.print("\t");
    }
//////////***HUMIDITY***///////////     
void HUMIDITY()
    {
      Serial.print("Getting Hum "); 
      int chk = DHT11.read(H);
      HUM=DHT11.humidity;
      lcd.setCursor(9,0);
      lcd.print("H:");
      lcd.print(HUM);
      Serial.print("H: ");
      Serial.print(HUM); Serial.print("\t");
     }
//////////***LIGHT***///////////      
void LIG()
    {
      Serial.print("Getting Lig ");
      int value_lig=analogRead(L);
      float millivolts_lig =(value_lig /1023.0)*5000;
      LIGHT=millivolts_lig /10;
      lcd.setCursor(0,1);
      lcd.print("L:");
      lcd.print(LIGHT);
      Serial.print("L: ");
      Serial.print(LIGHT);Serial.println("\t");
      delay(2000);
      lcd.clear();
    }
//////////***POWER***/////////// 
void POWER()
    {
      Serial.print("PWR STATUS\t");
      if(digitalRead(P)==LOW)
     {
      lcd.setCursor(0,0);
      lcd.print("P:ON");
      Serial.print("P:ON");Serial.print("\t");
      }
      else
      {
      lcd.setCursor(0,0);
      lcd.print("P:OFF");
      Serial.print("P:OFF");Serial.print("\t");
      }
    } 
//////////***REED SWITCH***/////////// 
void REED()
    {
      Serial.print("        REED STATUS ");
      if(digitalRead(R)==LOW)
      {
      lcd.setCursor(6,0);
      lcd.print("R:OPEN");
      Serial.print("R:OPEN");Serial.print("\t");
      }
      else
      {
      lcd.setCursor(6,0);
      lcd.print("R:CLOSE");
      Serial.print("R:CLOSE");Serial.print("\t");
      }
   }
//////////***PIR SENSOR***/////////// 
void PIR()
    {
      Serial.print("PIR STATUS ");
      if(digitalRead(X)==LOW)
      {
      lcd.setCursor(0,1);
      lcd.print("X:YES");
      Serial.print("X:YES");Serial.println("\t");
      }
      else
      {
      lcd.setCursor(0,1);
      lcd.print("X:NO ");
      Serial.print("X:NO");Serial.println("\t");
      }
      delay(2000);
   }
void post()
{
      String data;
      data += "{\"device_no\":\"WKSP-01\",\"client\":\"Workshop\",\"device_type\":\"SAM\",\"device_key\":\"LUJPIOJV7L5NHCWQ1F4J\",\"node_no\":\"001\",\"Temp\":\"";
      data += String(CELSIUS);
      data += "\",\"HUM\":\"";
      data += String(HUM);
      data += "\",\"LDR\":\"";
      data += String(LIGHT);
      data += "\",\"POWER\":\"";
      if(digitalRead(P)==LOW)
      {
      data += "ON.";
      }
      else
      {
      data += "OFF";        
      }
      data += "\",\"DOOR\":\"";
      if(digitalRead(R)==LOW)
      {
      data += "OPEN.";                
      }
      else
      {
       data += "CLOSE";                        
      }
      data += "\"}";
      String uri="/services/data";
      String port="80";
      String http_req= "POST " + uri + " HTTP/1.1\r\n"+ "Host: " + DST_IP + ":" + port + "\r\n" + "Accept: *" + "/" + "*\r\n" + "Content-Length: " + data.length() + "\r\n" ;
      String http_req1= "Content-Type: application/json\r\n\r\n" ;
      Serial.println(data);
      Serial.println(http_req);
      Serial.println(http_req1);
      int x=(http_req.length());
      int y=(http_req1.length());
      int z=data.length();
      int Total_req_data_Length = (x+y+z);
      Serial.println();
      String cmd = "AT+CIPSTART=\"TCP\",\"";
      cmd += DST_IP;
      cmd += "\",80";
      Serial.println(cmd);
      WiFi_Serial.println(cmd);
      delay(5000);
      if(WiFi_Serial.available())
      {
      String RES_input="";
      while(WiFi_Serial.available()) // read the data into a variable as long as the 
      {
      RES_input+= (char)WiFi_Serial.read();
      }
      Serial.println(RES_input);
      if(WiFi_Serial.find("CONNECT"));
      Serial.print("AT+CIPSEND=");
      WiFi_Serial.print("AT+CIPSEND=");
      WiFi_Serial.println(Total_req_data_Length);
      delay(100);
      if(WiFi_Serial.available());
      RES_input="";
      while(WiFi_Serial.available()) // read the data into a variable as long as the 
      {
      RES_input+= (char)WiFi_Serial.read();
      }
      Serial.println(RES_input);
      {
      if(WiFi_Serial.find(">"));
      {
      WiFi_Serial.print(http_req);
      WiFi_Serial.print(http_req1);
      WiFi_Serial.print(data);
      delay(2000);
      }
      }
      if(WiFi_Serial.available())
      {
        delay(100);
      String RES_input="";
      while(WiFi_Serial.available()) // read the data into a variable as long as the 
      {
      RES_input+= (char)WiFi_Serial.read();
      }
      lcd.clear();
      Serial.println(RES_input);
      Serial.println();
      Serial.println();
      }
      }
 }
void loop()
    {
      lcd.clear();
      lcd.setCursor(0,0);
      lcd.print("Axetla Systems");
      delay(1000);
      lcd.clear();
      while(1)
      {        
      if(CNT<1)   //CNT for Time Delay
      {
      if(Start_chck==0)
      {
      WIFI_Check();
      if(i==1)
      {
      connectWiFi();
      }
      }
      else
      {
      CNT=4;
      Start_chck=0;
      }
      }
      TEMPERATURE();
      HUMIDITY();
      LIG();
      POWER();
      REED();
      PIR();
      Serial.println();
      CNT--;
      }
    }
